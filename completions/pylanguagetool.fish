# FISH completion script for pylanguagetool
# Generated by pycomplete 0.4.0

function __fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand
    for i in (commandline -opc)
        if contains -- $i 
            return 1
        end
    end
    return 0
end

# global options
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l api-url -d 'the URL of the v2 languagetool API, should end with \'/v2/\''
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l clipboard -d 'get text from system clipboard'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l disabled-categories -d 'IDs of categories to be disabled, comma-separated'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l disabled-rules -d 'IDs of rules to be disabled, comma-separated'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l enabled-categories -d 'IDs of categories to be enabled, comma-separated'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l enabled-only -d 'enable only the rules and categories whose IDs are specified with --enabled-rules or --enabled-categories'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l enabled-rules -d 'IDs of rules to be enabled, comma-separated'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l explain-rule -d 'print URLs with more information about rules'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l help -d 'show this help message and exit'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l input-type -d 'if not plaintext'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l lang -d 'A language code like en or en-US, or auto to guess the language automatically (see preferredVariants below). For languages with variants (English, German, Portuguese) spell checking will only be activated when you specify the variant, e.g. en-GB instead of just en.'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l mother-tongue -d 'A language code of the user\'s native language, enabling false friends checks for some language pairs.'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l no-color -d 'don\'t color output'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l personal-word-list -d 'File name of personal dictionary. A private dictionary can be used to add special words that would otherwise be marked as spelling errors.'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l picky -d 'if enabled, additional rules will be activated'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l preferred-variants -d 'Comma-separated list of preferred language variants. The language detector used with language=auto can detect e.g. English, but it cannot decide whether British English or American English is used. Thus this parameter can be used to specify the preferred variants like en-GB and de-AT. Only available with language=auto.'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l rule-categories -d 'show the the categories of the matching rules'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l rules -d 'show the matching rules'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l single-line -d 'check every line on its own'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l verbose -d 'verbose output'
complete -c pylanguagetool -n '__fish_pylanguagetool_99ddd2e4751833f8_complete_no_subcommand' -l version -d 'print version and exit'

# commands


test
