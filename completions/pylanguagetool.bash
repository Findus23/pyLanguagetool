# BASH completion script for pylanguagetool
# Generated by pycomplete 0.4.0

_pylanguagetool_99ddd2e4751833f8_complete()
{
    local cur script coms opts com
    COMPREPLY=()
    _get_comp_words_by_ref -n : cur words

    # for an alias, get the real script behind it
    if [[ $(type -t ${words[0]}) == "alias" ]]; then
        script=$(alias ${words[0]} | sed -E "s/alias ${words[0]}='(.*)'/\\1/")
    else
        script=${words[0]}
    fi

    # lookup for command
    for word in ${words[@]:1}; do
        if [[ $word != -* ]]; then
            com=$word
            break
        fi
    done

    # completing for an option
    if [[ ${cur} == --* ]] ; then
        opts="--api-url --clipboard --disabled-categories --disabled-rules --enabled-categories --enabled-only --enabled-rules --explain-rule --help --input-type --lang --mother-tongue --no-color --personal-word-list --picky --preferred-variants --rule-categories --rules --single-line --verbose --version"

        case "$com" in



        esac

        COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
        __ltrim_colon_completions "$cur"

        return 0;
    fi

    # completing for a command
    if [[ $cur == $com ]]; then
        coms=""

        COMPREPLY=($(compgen -W "${coms}" -- ${cur}))
        __ltrim_colon_completions "$cur"

        return 0
    fi
}

complete -o default -F _pylanguagetool_99ddd2e4751833f8_complete pylanguagetool

test
